/*
Задача:
Дан массив положительных или отрицательных целых чисел:
I = [i1, .., in]

Вы должны создать отсортированный массив P вида:
[[p, сумма всех ij из I, для которых p является простым множителем (p положительным) для ij] ...]

P будет отсортирован по возрастанию порядка простых чисел. Окончательный результат должен быть представлен в виде массива массивов.

Пример:

I = [12, 15]; // результат = [[2, 12], [3, 27], [5, 15]]
[2, 3, 5] - список всех простых множителей элементов I, отсюда и результат.

Примечание:
Может случиться, что сумма равна 0, если некоторые числа отрицательны!
Пример: I = [15, 30, -45]. 5 делит 15, 30 и (-45), поэтому 5 появляется в результате, сумма чисел, для которых 5 является множителем, равна 0, поэтому мы имеем [5, 0] в результате среди других.
*/

function sumOfDivided(lst) {
  let dic = {};

  for (let i = 0; i < lst.length; i++) {
    if (lst[i] >= 0) {
      for (let p = 2; p <= lst[i]; p++) {
        if (lst[i] % p == 0) {
          let prime = true;
          for (k in dic) {
            if (p % k === 0 && p != k) prime = false;
          }
          if (prime) {
            if (!(p in dic)) dic[p] = 0;
            dic[p] += lst[i];
          }
        }
      }
    } else {
      for (let p = 2; p <= -lst[i]; p++) {
        if (-lst[i] % p == 0) {
          let prime = true;
          for (k in dic) {
            if (p % k === 0 && p != k) prime = false;
          }
          if (prime) {
            if (!(p in dic)) dic[p] = 0;
            dic[p] += lst[i];
          }
        }
      }
    }
  }

  let res = [];
  for (k in dic) res.push([parseInt(k, 10), dic[k]]);

  return res;
}

console.log(sumOfDivided([12, 15])); // expected [[2, 12], [3, 27], [5, 15]]
console.log(sumOfDivided([15, 21, 24, 30, 45])); // expected [[2, 54], [3, 135], [5, 90], [7, 21]]
console.log(sumOfDivided([15, 21, 24, 30, -45])); // expected [[2, 54], [3, 45], [5, 0], [7, 21]]
console.log(sumOfDivided([17, -17, 51, -51])); // expected [[3, 0], [17, 0]]
console.log(sumOfDivided([107, 158, 204, 100, 118, 123, 126, 110, 116, 100])); // expected [[2, 1032], [3, 453], [5, 310], [7, 126], [11, 110], [17, 204], [29, 116], [41, 123], [59, 118], [79, 158], [107, 107]]
console.log(sumOfDivided([-29804, -4209, -28265, -72769, -31744])); // expected [[2, -61548], [3, -4209], [5, -28265], [23, -4209], [31, -31744], [53, -72769], [61, -4209], [1373, -72769], [5653, -28265], [7451, -29804]]
