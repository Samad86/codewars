/* Задача:
Определите функцию, которая принимает два неотрицательных целых числа a и b и возвращает последнюю десятичную цифру a ^ b. Обратите внимание, что a и b могут быть очень большими!

Например, последняя десятичная цифра 9 ^ 7 равна 9, поскольку 9 ^ 7 = 4782969. Последняя десятичная цифра (2 ^ 200) ^ (2 ^ 300), которая содержит более 10 ^ 92 десятичных цифр, равна 6. Также, пожалуйста, возьмите 0 ^ 0, чтобы быть 1.

Вы можете предположить, что ввод всегда будет действительным.

Примеры:
lastDigit("4", "1") // возвращает 4
lastDigit("4", "2") // возвращает 6
lastDigit("9", "7") // возвращает 9
lastDigit("10", "10000000000") // возвращает 0
*/

var lastDigit = function (str1, str2) {
  return +!+str2 || Math.pow(str1.slice(-1), str2.slice(-2) % 4 || 4) % 10;
};

console.log(lastDigit("4", "1")); // expected 4
console.log(lastDigit("4", "2")); // expected 6
console.log(lastDigit("9", "7")); // expected 9
console.log(lastDigit("154789201", "0")); // expected 1
console.log(lastDigit("10", "10000000000")); // expected 0
console.log(
  lastDigit(
    "1606938044258990275541962092341162602522202993782792835301376",
    "2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376"
  )
); // expected 6
console.log(
  lastDigit(
    "3715290469715693021198967285016729344580685479654510946723",
    "68819615221552997273737174557165657483427362207517952651"
  )
); // expected 7
