/* Задача:
Вы знаете, как сделать спираль? Давайте проверим это!
Классическое определение: спираль - это кривая, которая исходит из центральной точки, постепенно удаляясь от нее, вращаясь вокруг этой точки.

Ваша цель - завершить функцию createSpiral(N), которая получает целое число N и возвращает двумерный массив N x N с номерами от 1 до N x N, представленными в виде спирали по часовой стрелке.

Вернуть пустой массив, если N < 1 или N не является int.

Примеры:

N = 3 Выход: [[1,2,3], [8,9,4], [7,6,5]]
1 2 3
8 9 4
7 6 5

N = 4 Выход: [[1,2,3,4], [12,13,14,5], [11,16,15,6], [10,9,8,7]]
1 2 3 4
12 13 14 5
11 16 15 6
10 9 8 7

N = 5 Выход: [[1,2,3,4,5], [16,17,18,19,6], [15,24,25,20,7], [14,23,22,21,8], [13,12,11,10,9]]
1 2 3 4 5
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9
*/

function createSpiral(N) {
  if (!Number.isInteger(N) || N < 1) return [];

  let matrix = Array.from({ length: N }, () => Array(N).fill("x"));

  let number = 1;

  for (let i = 0; i < N / 2; i++) {
    for (let j = i; j < N - i; j++) matrix[i][j] = number++;
    for (let j = i + 1; j < N - i; j++) matrix[j][N - 1 - i] = number++;
    for (let j = N - i - 2; j > i; j--) matrix[N - 1 - i][j] = number++;
    for (let j = N - i - 1; j > i; j--) matrix[j][i] = number++;
  }

  return matrix;
}

console.log(createSpiral(1)); // expected [[1]]
console.log(createSpiral(2)); // expected [[1, 2], [4, 3]]
// 1    2
// 4    3
console.log(createSpiral(3)); // expected [[1, 2, 3], [8, 9, 4], [7, 6, 5]]
// 1    2    3
// 8    9    4
// 7    6    5
console.log(createSpiral(4)); // expected [[1, 2, 3, 4], [12, 13, 14, 5], [11, 16, 15, 6], [10, 9, 8, 7]]
// 1   2   3   4
// 12  13  14  5
// 11  16  15  6
// 10  9   8   7
console.log(createSpiral(5)); // expected [[1, 2, 3, 4, 5], [16, 17, 18, 19, 6], [15, 24, 25, 20, 7], [14, 23, 22, 21, 8], [13, 12, 11, 10, 9]]
// 1   2   3   4   5
// 16  17  18  19  6
// 15  24  25  20  7
// 14  23  22  21  8
// 13  12  11  10  9
console.log(createSpiral(6)); // expected [[1, 2, 3, 4, 5, 6], [20, 21, 22, 23, 24, 7], [19, 32, 33, 34, 25, 8], [18, 31, 36, 35, 26, 9], [17, 30, 29, 28, 27, 10], [16, 15, 14, 13, 12, 11]]
// 1   2   3   4   5   6
// 20  21  22  23  24  7
// 19  32  33  34  25  8
// 18  31  36  35  26  9
// 17  30  29  28  27  10
// 16  15  14  13  12  11
