/* Вступление
Маленький Петя очень любит последовательности. Однако недавно он получил последовательность в подарок от своей матери.
Пете это совсем не понравилось! Он решил сделать одну замену. После этой замены Петя хотел бы последовательность в порядке возрастания.
Он спрашивает себя: какое минимальное значение я мог бы получить после выполнения замены и сортировки последовательности?

О замене:
Выберите ровно один элемент из последовательности и замените его другим целым числом> 0. Вам не разрешено заменять число на себя или вообще не изменять число.

Pадача:
Найдите наименьшую возможную последовательность после выполнения правильной замены и сортировки последовательности.

Входные данные:
Вход содержит последовательность с N целыми числами. Все элементы последовательности> 0. Последовательность никогда не будет пустой.

Выход:
Возвращаемая последовательность с N целыми числами - которая включает в себя наименьшие возможные значения каждого элемента последовательности после выполнения одной замены и сортировки.

Примеры:

([1,2,3,4,5]) => [1,1,2,3,4]
([4,2,1,3,5]) => [1,1,2,3,4]
([2,3,4,5,6]) => [1,2,3,4,5]
([2,2,2]) => [1,2,2]
([42]) => [1]
*/

function replacement(a) {
  if (a.every((elem) => elem == 1)) {
    a.splice(a.length - 1, 1, 2);
    return a;
  }
  if (a.length == 1) {
    a.splice(0, 1, 1);
    return a;
  }
  let aSort = a.sort((prev, next) => prev - next);
  aSort.unshift(1);
  aSort.pop();
  return aSort;
}

console.log(replacement([1, 2, 3, 4, 5])); // expected [1,1,2,3,4]
console.log(replacement([4, 2, 1, 3, 5])); // expected [1,1,2,3,4]
console.log(replacement([2, 3, 4, 5, 6])); // expected [1,2,3,4,5]
console.log(replacement([2, 2, 2])); // expected [1,2,2]
console.log(replacement([1, 1, 1])); // expected [1,1,2]
console.log(replacement([1])); // expected [2]
console.log(replacement([42])); // expected [1]
