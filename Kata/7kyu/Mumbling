/*
На этот раз ни рассказа, ни теории. В приведенных ниже примерах показано, как написать функцию accum:

Примеры:

accum("abcd") -> "A-Bb-Ccc-Dddd"
accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
accum("cwAt") -> "C-Ww-Aaa-Tttt"

Параметр accum - это строка, которая включает только буквы от a..z и A..Z.
*/

// 1й способ:
/*
function accum(s) {
  let res = [];
  let count = 0;

  for (let i = 0; i < s.length; i++) {
    while (count < i + 1) {
      res.push(s[i]);
      count++;
    }

    count = 0;
    res.push('-');
  }

  res.pop();

  for (let i = 0; i < res.length; i++) {
    res[i] = res[i].toLowerCase();
    if (i == 0 || res[i - 1] === '-') res[i] = res[i].toUpperCase();
  }

  return res.join('');
}
*/

// 2й способ:
function accum(s) {
  return s
    .split('')
    .map((elem, index) => elem.toUpperCase() + elem.toLowerCase().repeat(index))
    .join('-');
}

console.log(accum('abcd')); // expected "A-Bb-Ccc-Dddd"
console.log(accum('RqaEzty')); // expected "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
console.log(accum('cwAt')); // expected "C-Ww-Aaa-Tttt"
console.log(accum('ZpglnRxqenU')); // expected "Z-Pp-Ggg-Llll-Nnnnn-Rrrrrr-Xxxxxxx-Qqqqqqqq-Eeeeeeeee-Nnnnnnnnnn-Uuuuuuuuuuu"
console.log(accum('NyffsGeyylB')); // expected "N-Yy-Fff-Ffff-Sssss-Gggggg-Eeeeeee-Yyyyyyyy-Yyyyyyyyy-Llllllllll-Bbbbbbbbbbb"
