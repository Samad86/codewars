/*
Объекты Set - это новые встроенные объекты JavaScript, определенные с ECMAScript 2015.

Set позволяет хранить уникальные значения любого типа. Он поставляется с некоторыми полезными методами, такими как .add, .clear, .has ... НО некоторые "Set операции" отсутствуют, такие как:

Пересечение

Новый Set можно построить, определив, какие «общие» элементы имеют два набора. Пересечение A и B, обозначенное A ∩ B, - это множество всех вещей, которые являются членами как A, так и B. Если A ∩ B = 0, то A и B называются не пересекающимися.

Примеры:
   {1, 2} ∩ {1, 2} = {1, 2}.
   {1, 2} ∩ {2, 3} = {2}.

Задача:
Создайте функцию inter, получающую 2 набора в качестве аргументов и возвращающую новый набор в результате пересечения этих двух наборов.

Примеры:
A = new Set([1,2]);
B = new Set([2,3]);

C = inter(A, B) // -> {2}
*/

function inter(s1, s2) {
  s1 = Array.from(s1);
  s2 = Array.from(s2);

  return new Set(s1.filter((elem) => s2.includes(elem)));
}

let A = new Set([1, 2]);
let B = new Set([2, 3]);
console.log(inter(A, B)); // expected {2}

A = new Set([1, 2]);
B = new Set([1, 2]);
console.log(inter(A, B)); // expected {1, 2}
